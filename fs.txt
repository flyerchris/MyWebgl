varying highp vec4 fnormal;
varying highp vec4 vpos;
varying highp vec2 ftxuv;
uniform int hastex;//judge if the obj has texture
uniform int sel;//judge if the obj is selected

uniform sampler2D uSampler;

void main(void){
	//point light and eye position
	highp vec4 light=vec4(1000.0,1000.0,0.0,1);
	highp vec4 eye=vec4(0.0,0.0,0.0,1);
	highp vec4 eyedir=eye-vpos;
	highp vec4 ldir=light-vpos;
	highp vec4 rdir=reflect(-ldir,fnormal);
	
	//calculate	specular light
	highp float spectlight=max(0.0,dot(rdir,eyedir));
	spectlight=spectlight/length(rdir)/length(eyedir);
	spectlight=pow(spectlight,150.0);
	spectlight*=0.8;
	
	//ambient and diffuse
	highp float color=max(0.0,dot(fnormal,ldir));
	color/=(length(fnormal)*length(ldir));
	color+=0.05;
	color+=spectlight;
	if(color>1.0){
		color=1.0;
	}
	
	//if selected, add color
	highp float selcol=0.0;
	if(sel==1){
		selcol=0.3;
	}
	
	highp vec4 txsm=texture2D(uSampler, ftxuv);
	 if(hastex==1)
		gl_FragColor = vec4(txsm.xy*color+selcol,txsm.z*color,1);
	 else
		gl_FragColor =vec4(color,color,color,1);
}